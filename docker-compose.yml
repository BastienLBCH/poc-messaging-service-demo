---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-demo
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - my-solution-network

  broker:
    image: confluentinc/cp-kafka:7.5.0
    container_name: broker-demo
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my-solution-network

  init-kafka:
    image: confluentinc/cp-kafka:7.5.0
    networks:
      - my-solution-network
    depends_on:
      - broker
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server broker:9092 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker:9092 --create --if-not-exists --topic messaging-service --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker:9092 --list
      "

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.3
    container_name: keycloak-demo
    ports:
      - "8080:8080"
    command:
      - start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_HOST: 0.0.0.0
    networks:
      - my-solution-network


  query-server:
    build: poc-messaging-service-queries-main
    container_name: query-server-demo
    ports:
      - "8001:80"
    depends_on:
      - broker
    environment:
      KAFKA_BOOTSTRAP_SERVER: broker:9092
      KAFKA_GROUP_ID: messaging_service
      KAFKA_TOPIC: messaging-service
      KEYCLOAK_PUBLIC_KEY: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp1TNEalVuAp+rIUX6qCw5+LTl0uLx5fb4IGvXF+D+1iSFSQ8xk4xXP7VX7dZ2IUInlqDyadLhhfQHZ4nv8sapUvSlU/JbwrLNxrx4I/Nn9tT+5aAyR2R6rhZqI8kge5vaSyOTuEbIPcGH0/0UJX032kdW7jDwB4bgJVE/KnngOmyld7ye+wwM6Huz9J+wMvCmL5c0TYgcnvkG9VpcnRb0eZYem7xt1aTjAxGkANKNldrZ87WubY9x++2FTUk4FWhB2VDgLsFvcST7dIqxG9XmXVLvtHvjUfewLV5kBD0Is1yB88s/IxLB+YHcf455d119yYM4zb7ImrGl6oyQ+l8AQIDAQAB
      KEYCLOAK_ALG: RS256

      # Optionals arguments for using integrated frontend
      KEYCLOAK_CLIENT_ID: login-client
      KEYCLOAK_USERS_URL: http://192.168.1.17/admin/realms/poc/users/
      COMMAND_SERVER: http://192.168.1.17
      ACCESS_URL: http://192.168.1.17


      # Used for integrated frontend & unit testing
      KEYCLOAK_TOKEN_URL: http://192.168.1.17/realms/poc/protocol/openid-connect/token
    networks:
      - my-solution-network


  command-server:
    build: poc-messaging-service-commands-main/pocMessagingServiceCommands/
    container_name: command-server-demo
    ports:
      - "8000:80"
    environment:
      KEYCLOAK_PUBLIC_KEY: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp1TNEalVuAp+rIUX6qCw5+LTl0uLx5fb4IGvXF+D+1iSFSQ8xk4xXP7VX7dZ2IUInlqDyadLhhfQHZ4nv8sapUvSlU/JbwrLNxrx4I/Nn9tT+5aAyR2R6rhZqI8kge5vaSyOTuEbIPcGH0/0UJX032kdW7jDwB4bgJVE/KnngOmyld7ye+wwM6Huz9J+wMvCmL5c0TYgcnvkG9VpcnRb0eZYem7xt1aTjAxGkANKNldrZ87WubY9x++2FTUk4FWhB2VDgLsFvcST7dIqxG9XmXVLvtHvjUfewLV5kBD0Is1yB88s/IxLB+YHcf455d119yYM4zb7ImrGl6oyQ+l8AQIDAQAB
      KEYCLOAK_ALG: RS256
      KEYCLOAK_TOKEN_URL: http://api-gateway/realms/poc/protocol/openid-connect/token
      BOOTSTRAP_SERVER: broker:9092
      TOPIC: messaging-service
      ENV: DEMO
    depends_on:
      - broker
    networks:
      - my-solution-network


  api-gateway:
    build: nginx
    container_name: api-gateway-demo
    ports:
      - "80:80"
    depends_on:
      - command-server
      - keycloak
      - query-server
      - broker
    networks:
      - my-solution-network


networks:
  my-solution-network:



